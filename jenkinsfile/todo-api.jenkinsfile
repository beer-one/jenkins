node("gradle-7-4-2-jdk17") {

    def buildNumber = currentBuild.number
    def appName = "todo-api"

    def appRepo = "https://github.com/beer-one/TodoList.git"
    def appBranch = "main"
    def appDirectory = "TodoList-server-kotlin"

    def baseImage = "openjdk:17-alpine"
    def appImage = "beer1/todo-server-kotlin"
    def tag = "test"

    def manifestRepo = "github.com/beer-one/k8s-manifests.git"
    def valueFile = "todo-list/todo-api.yaml"
    
    checkout([
        $class: 'GitSCM', 
        branches: [[name: "*/${appBranch}"]], 
        userRemoteConfigs: [[url: appRepo]]
    ])

    dir(appDirectory) {
        stage('Build') {
            sh 'gradle build -x test -x jib'
        }
        
        stage('Test') {
            sh 'gradle test'
        }

        stage('Package') {
            withCredentials([usernamePassword(credentialsId: "docker-hub-credential", passwordVariable: "password", usernameVariable: "username")]) {
                def jib = """
                |gradle jib -Djib.from.image=${baseImage} \\
                |    -Djib.to.image=${appImage} \\
                |    -Djib.to.tags=${tag} \\
                |    -Djib.to.auth.username=${username} \\
                |    -Djib.to.auth.password=${password} 
                """.stripMargin()

                sh(script: jib)
            }
        }
        
        stage('Deploy') {

            withCredentials([usernamePassword(credentialsId: "github-credential", passwordVariable: "password", usernameVariable: "username")]) {

                checkout([
                    $class: 'GitSCM', 
                    branches: [[name: '*/main']], 
                    userRemoteConfigs: [[url: "https://${manifestRepo}"]]
                ])

                def deployScripts = """
                |git config --global user.email "floidea@naver.com"
                |git config --global user.name ${username}
                |sed -i "s/name: \$(yq .podAnnotations.buildNumber ${valueFile})/name: build-${buildNumber}/g" ${valueFile}
                |sed -i "s@image: \$(yq .app.image ${valueFile})@image: ${appImage}:${tag}@g" ${valueFile}
                |git add .
                |git commit -m "Deploy ${appName} (${appImage}:${tag})"
                |git remote set-url origin https://${username}:${password}@${manifestRepo}
                |git push -u origin main
                """.stripMargin()

                sh(script: deployScripts)
            }
        }
    }
}